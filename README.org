
* emacs-config
This configuration relies on a few utilities. Built-in functionality is preferred when functionality is close to identical.

The dependencies are: emacs >= 29/28, guix (guix.el), gnupg (authinfo), git (magit), rg/fd (dired), pass (password-store/pass-otp), aspell (flyspell), mpv (emms), notification-daemon (erc), sqlite (forge/roam), osc terminal emulator (xterm.el), curl (osm), wget (newsticker), transmission and a shell.

Current package considerations:
embark for dwim shortcuts
consult for commands
combobulate for structural editing
ts-fold for structural folding

Third party package choices:

gcmh: collect garbage when idle to avoid pauses. alternative is increase gc-cons-threshold per workflow

emms: frontend for music/video player with radio. alternative mpv.el or cli

rmsbolt: decompiler explorer. alternative is external decompiler.

guix: package/environment management. alternative is ensure/pinning with use-packages and setting exec-path-from-shell

pass/pass-otp: frontend to password-store. alternative is git repo of authinfo.gpg store and totp app.

eat: graphical terminal emulation. alternative built-in multi-term w/o visual commands

magit/forge/code-review: git/forge manipulation. alternative built-in vc lacks complex workflows like interactive rebase, forge pull requests or code-review

debbugs: track emacs/guix bugs. alternative is bookmarking websites/mailing lists

transmission: manage torrent client. alternative is scripting transmission-cli

org-roam: tag system for note database. alternative is self devised naming/search scheme with org-captured datetree journal

fd-dired: speedup dired operations with rg/fd. alternative is find/grep

undo-tree: undo edit persist restarts. alternative is built-in undo with session persistence redone

flycheck: lsp, guile, rust checkers. alternative built-in flymake only has 10 backends w/o external packages

company: automatic typing suggestions. alternatives corfu lacks backends w/o cape and auto-complete is obe

lsp-ui: debugging with dap-mode. alternative: eglot, realgud, lang specific packages (ex. jedi for python)

treemacs: workspace/project drawer with lsp/flycheck/company features. alternative is manual workspaces with built-in project.el

smartparens: saves typing closing delimiters and strict matching speeds up font highlighting by avoiding broken/missing matches

minions-mode: keeps the modeline visually brief with retained information. alternative: diminish/delight packages and config for each mode

multiple-cursors: mass editing. alternative: reinvent with a function of marks and operations

explain-pause-mode: profiler top like realtime view. alternative is profiler-report snapshots

expand-region: select semantic units of text. alternative is set mark and search/select or treesit with combobulate

langs: rustic, guile-geiser, pyvenv/pyls/debugpy. alternative is only use elisp

which-key: show keymap keybinds. alternative is describe-* functions for bind discovery

osm: Map tile viewer. alternative is web browser viewing

pcre2el: regex converter. alternative is a smooth big brain

drag-stuff: move text around. alternative is treesit with combobulate

link-hint: copy link urls (using avy). alternative is regex buffer contents

** Clone
Branch names diverging and "." complicate fetching the correct heads.

#+NAME: clone
#+BEGIN_SRC sh :tangle no
git clone --single-branch --recurse-submodules --shallow-submodules --depth=1 git@github.com:jamartin9/emacs-config.git
# get branch heads
git submodule foreach 'git checkout master'
#+END_SRC

** Tangle Install
Emacs untangles the script from the org file (using noweb to copy/eval code) while expanding INCLUDE directives.
Tangling is rerun when the org file is newer than the script (if present) and the html file.
Cleanup is done via the ~clean~ arguments to the ~make-el~ wrapper.
The wrapper is needed for org-roam, org-ids and html export tags.

#+NAME: tangle
#+BEGIN_SRC sh :tangle no
pwsh make-el.ps1 install
#+END_SRC

** Link
Installable org files tangle to a script of the same name for installation.
The script needs itself and emacs on the PATH or CWD.

#+NAME: link-README
#+BEGIN_SRC emacs-lisp :tangle README.sh :shebang "\":\"; emacs -Q --script README.sh -- $@ $args ; exit $? # -*- mode: emacs-lisp; lexical-binding: t; -*-"
(ignore-errors
      (make-symbolic-link (file-name-directory (or load-file-name buffer-file-name)) (concat (file-name-as-directory (if (getenv "XDG_CONFIG_HOME") (getenv "XDG_CONFIG_HOME") (concat (file-name-as-directory (getenv "HOME")) ".config"))) "emacs")))
#+END_SRC

** Run
The one line org-mode sesquicolon 'shebang' is a multipart shell/powershell wrapper.
Passed arguments to the elisp script are available by argv (ignoring “–” and “$@”).
To run with powershell use the same wrapper format with a .ps1 extension.

#+NAME: run-wrapper
#+BEGIN_SRC sh :tangle no
":"; emacs -Q --script README.sh -- $@ $args ; exit $? # -*- mode: emacs-lisp; lexical-binding: t; -*-
#+END_SRC

** Cherry Picking
Copy files by url with emacs
#+NAME: elisp-copy
#+BEGIN_SRC elisp :tangle no
(url-copy-file "https://raw.githubusercontent.com/jamartin9/emacs-config/master/init.el" "init.el")
(url-copy-file "https://raw.githubusercontent.com/jamartin9/emacs-config/master/early-init.el" "early-init.el")
#+END_SRC

** Site
Clone the site
#+NAME: clone-gh-pages
#+BEGIN_SRC sh :tangle no
git worktree add --track -b gh-pages ./gh-pages origin/gh-pages
#+END_SRC

Build the updated site
#+NAME: tangle
#+BEGIN_SRC sh :tangle no
pwsh make-el.ps1 site
#+END_SRC
