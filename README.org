
* emacs-config
This configuration relies on a few utilities. Built-in functionality is preferred when functionality is identical.
The dependencies are: emacs >= 29/28, rg, fd, guix, git, gnupg, pass (password-store), aspell (flyspell), vlc/mpv (emms), notification-daemon (erc), c compiler (vterm), sqlite (forge) and a shell

Current package considerations:
signal-msg: sms support dropping? unmaintained/broken currently (apply fixes/rewrite?)
clipetty: copy-paste w/screen support. wayland?

Third party package choices:
gcmh: collect garbage when idle to avoid pauses
emms: frontend for music/video player
rmsbolt: decompiler explorer
guix: package management
pass: frontend to password-store
switch-window: change windows w/o other-window rsi
vterm: graphical terminal emulation
magit/forge: git/forge manipulation
debbugs: track emacs/guix bugs. alternative is bookmarking websites
transmission: manage torrent client. alternative is scripting transmission-cli
org-roam: tag system for note database
fd-dired: speedup dired operations with rg/fd
undo-tree: undo edit rsi
flycheck: lsp, guile, rust checkers. alternative built-in flymake only has 10 backends w/o external packages
company: aggregates built-in backends (dabbrev/hippie-expand/complete/pcomplete). alternatives: corfu lacks backends / auto-complete is obe
lsp-mode: debugging with dap unlike alternative eglot
ws-butler: modifies only touched lines unlike built-in alternative delete-trailing-whitespaces on save
smartparens: strict matching speeds up font highlighting by avoiding broken/missing matches
minions-mode: keeps the modeline visually brief with retained information
langs: rustic, guile-geiser, pyvenv/pyls/debugpy
multiple-cursors: mass editing
explain-pause-mode: profiler top like realtime view. alternative is profiler-report snapshots
pcre2el: regex converter. alternative: big brain
expand-region: select semantic units of text. alternative is set mark and search/select
which-key: show commands keybinds. alternative: M-x all the things and remember the names
realgud: gdb frontend
treemacs: project drawer with lsp features

** Clone
Branch names diverging and "." complicate fetching the correct heads.

#+NAME: clone
#+BEGIN_SRC sh :tangle no
git clone --single-branch --recurse-submodules --shallow-submodules --depth=1 git@github.com:jamartin9/emacs-config.git
# get branch heads
git submodule foreach 'git checkout master'
#+END_SRC

** Tangle
Emacs untangles the script from the org file (using noweb to copy/eval code).

#+NAME: tangle
#+BEGIN_SRC sh :tangle no
pwsh make-el.ps1 install
#+END_SRC

** Link
Installable org files tangle to a script of the same name for installation.
The script needs itself and emacs on the PATH or CWD.

#+NAME: link-README
#+BEGIN_SRC emacs-lisp :tangle README.sh :shebang "\":\"; emacs -Q --script README.sh -- $@ $args ; exit $? # -*- mode: emacs-lisp; lexical-binding: t; -*-"
(ignore-errors
      (make-symbolic-link (file-name-directory (or load-file-name buffer-file-name)) (concat (file-name-as-directory (if (getenv "XDG_CONFIG_HOME") (getenv "XDG_CONFIG_HOME") (concat (file-name-as-directory (getenv "HOME")) ".config"))) "emacs")))
#+END_SRC

** Run
The one line org-mode sesquicolon 'shebang' is a multipart shell/powershell wrapper.
Passed arguments to the elisp script are available by argv (ignoring “–” and “$@”).
To run with powershell use the same wrapper format with a .ps1 extension.

#+NAME: run-wrapper
#+BEGIN_SRC sh :tangle no
":"; emacs -Q --script README.sh -- $@ $args ; exit $? # -*- mode: emacs-lisp; lexical-binding: t; -*-
#+END_SRC
