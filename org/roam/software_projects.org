:PROPERTIES:
:ID:       0a94af9d-559e-4c78-b90e-cca4a43e9efe
:END:
#+title: software-projects
#+OPTIONS: toc:nil num:nil date:nil \n:nil html-style:nil author:nil timestamp:nil title:nil html-postamble:nil html5-fancy:t
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="org-default.css" />
#+HTML_CONTENT_CLASS: container
#+HTML_DOCTYPE: html5
#+INCLUDE: "css.org::navbar" :only-contents t
* software projects
The coding will continue until morale improves!
** working
- key2words
  - rust cli executable that uses bip39 to generate mneumonics from ed25519 keys.
    - bulma/yew web ui form too
  - supports passphrase encryption and decryption of ssh/gpg
  - added onion service secret file generation
    - takes 1 set of words and makes a hidden service behind ssh with pgp signing/encryption for that set of bytes
  - *Service Worker require third party cookies* ~chrome://settings/cookies~
#+ATTR_HTML: :src https://jamartin9.github.io/key2words/index.html :width 100% :height 300
#+BEGIN_iframe
#+END_iframe

*** personal
- guix-channel
  - guile scheme guix channel for custom packages
  - mostly packages that are in process or unsuitable for nonguix or other repos
    - zfs
      - add pam user login mounting :wip:
      - add root initramfs support :wip:
    - add graft support for nvda to browsers :wip:
- emacs-config
  - elisp/org configuration for emacs
  - uses elisp wrapper script to untangle/eval org file code for setup
  - uses submodules for guix-channel of with custom emacs packages
  - publishes site from org-mode files
    - does not use org-publish but each page is customizable from the org-roam-capture-template header
- resume
  - org file of my resume for latex to pdf export
  - includes stencil cover letter
  - pgp public key in profile picture qr code
    - customize qr code image?
  - PDF links to projects/pages
** old
- matching
  - CUDA project for implementing the stable matching algorithm
    - uses flattened 2d matrix structure to avoid pointer deref and multiplex access for the third dimension of block threads
    - uses managed malloc api to avoid pinning/pointer deference performance issues
    - limitation of 1024 x 3 concurrent problem size (api limit of x + y + z of threads in block execution) with respect to O(n log n ^2) complexity :wip:
      - limited by find minimum (reduction) kernel which depends on the results of other parallel processes to finish the step in log n. (maybe solve with eventually consistent atmoic ops queue to avoid blocking?) nvidia's reduction kernel is O(n log n) as it is unbounded size despite extensive optimizations like block unrolling.
      - removing the concurrent requirement of several steps would raise the max problem size to 1024 X 3 X 65535 per step invocation
  - done as REU
  - obe [[https://ashvardanian.com/posts/searching-stable-marriages/][for vector db]] (measuring closeness representation for large sets)
