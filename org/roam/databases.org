:PROPERTIES:
:ID:       f6550312-62de-4538-8729-a11767d59560
:END:
#+title: databases
#+OPTIONS: toc:nil num:nil date:nil \n:nil html-style:nil author:nil timestamp:nil title:nil html-postamble:nil html5-fancy:t
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="org-default.css" />
#+HTML_CONTENT_CLASS: container
#+HTML_DOCTYPE: html5
#+INCLUDE: "css.org::navbar" :only-contents t
* Databases
** Relational
- [[id:162f9fba-d1f9-44e8-ae9f-685c578523f1][sqlite]]
- [[id:46651545-b172-443b-b0db-506019b4456c][postgres]]
- MySQL
  - innodb storage engine prefetches and caches itself with default 16k record size
    - https://dev.mysql.com/doc/refman/8.4/en/innodb-locking.html
    - dzfs_prefetch_disable=1, logbias=throughput, primarycache=metadata, atime=off, xattr=sa, recordsize=16k
    - innodb_log_write_ahead_size=16384, innodb_doublewrite=0, innodb_checksum_algorithm=none, innodb_flush_neighbors=0, innodb_use_native_aio=0, innodb_use_atomic_writes=0
    - increase writes by disabling disk flushing with innodb_flush_log_at_trx_commit=0 and sync_binlog=0. ZFS disable all explicit disk flushing to any one file system by setting sync=disabled so it flushes every ~5sec
  - https://enhancedformysql.github.io/The-Art-of-Problem-Solving-in-Software-Engineering_How-to-Make-MySQL-Better/
  - [[https://github.com/pingcap/tidb][TiDB]]
    - somewhat compatible with MySQL
    - TiKV for key value storage
    - distributed db
** olap
- duckdb
  - column store for faster analytics
  - sqlite/postgres scanner support
  - no concurrent readers/writers yet
- Clickhouse
- https://transactional.blog/notes-on/disaggregated-oltp
** notes
- BTree based DB's are more cache friendly as nodes can have more than 2 children (abseil uses 62 children) unlike Binary Trees
  - binary tree's (red-black like C++ STL) are better with larger sized nodes (moving pointers) than smaller (moving values)
- vitess (mysql compat) is used by planetscale and switched from AST interpreter(like postrgres) to bytecodevm(sqlite)
