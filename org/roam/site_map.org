:PROPERTIES:
:ID:       30ea5e38-9b41-4bcd-8631-76821e93e294
:END:
#+title: site-map
#+OPTIONS: toc:nil num:nil date:nil \n:nil html-style:nil author:nil timestamp:nil title:nil html-postamble:nil html5-fancy:t
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="org-default.css" />
#+HTML_HEAD: <script src="sqlite3.js" > </script>
#+HTML_HEAD: <script src="sqlite-query.js" > </script>
#+HTML_CONTENT_CLASS: container
#+HTML_DOCTYPE: html5
#+INCLUDE: "css.org::navbar" :only-contents t
* Site Map
#+ATTR_HTML: :class container
#+BEGIN_section
#+ATTR_HTML: :class input :type search :placeholder Search :id search
#+BEGIN_input
#+END_input
#+END_section
#+ATTR_HTML: :class modal :id modal
#+BEGIN_dialog
#+BEGIN_article
#+BEGIN_header
SQLite FTS Regex Search
#+ATTR_HTML: :id modalClose :aria-label Close :rel prev :data-target modal
#+BEGIN_button
#+END_button
#+END_header
#+ATTR_HTML: :id modalDiv
#+BEGIN_div
#+END_div
#+END_article
#+END_dialog

#+NAME: sitemap
#+BEGIN_SRC elisp :tangle no :exports results :results raw
(require 'org-roam-graph)
(setq-local org-roam-db-location (concat (file-name-as-directory user-emacs-directory)
                                         (file-name-as-directory ".local")
                                         (file-name-as-directory "cache")
                                         "org-roam.db"))

(defun jam/org-roam-get-children (node-id indent-string)
  "Return org list of children for NODE-ID all indented by INDENT-STRING"
 (let ((links (org-roam-graph--connected-component node-id 1))
        (return-string (list "")))
   (dolist (element links)
     (let* ((id (format "%s" (nth 1 element)))
            (title (caar (org-roam-db-query [:select title :from nodes :where (= id $s1)] id))))
       (if (and (not (string-equal node-id id)) title) ; skip self node
           (add-to-list 'return-string (concat indent-string (format "- [[id:%s][%s]] \n" id title))))))
   (format "%s" (mapconcat 'identity return-string))))

(let* ((current-links (org-roam-graph--connected-component "30ea5e38-9b41-4bcd-8631-76821e93e294" 0))
       (return-string (list "- Site Map: \n"))); sitemap/index/navbar as a INCLUDE in each page serves as a universal query point for all nodes
  (dolist (element current-links)
    (let* ((id (format "%s" (nth 1 element)))
           (title (caar (org-roam-db-query [:select title :from nodes :where (= id $s1)] id))))
      (if title ; titles are linked nodes
          (progn ; add node and descendants
            (add-to-list 'return-string (format "  - [[id:%s][%s]] \n" id title))
            (add-to-list 'return-string (jam/org-roam-get-children id "    "))))))
  ;(message "return string is: \n %s"  (format "%s" (mapconcat 'identity (reverse return-string))))
  (format "%s" (mapconcat 'identity (reverse return-string))))
#+END_SRC


#+NAME: sitemap-run
#+BEGIN_SRC emacs-lisp :tangle site_map.sh :shebang "\":\"; emacs -Q --script site_map.sh -- $@ $args ; exit $? # -*- mode: emacs-lisp; lexical-binding: t; -*-"
(defun collect-basenames (dir pattern)
  (mapcar #'file-name-base
          (directory-files-recursively dir pattern)))
(ignore-errors
(let* ((org-dir (file-name-directory (or load-file-name buffer-file-name)))
       (org-files (collect-basenames org-dir "\\.org$"))
       (html-dir (concat (file-name-as-directory user-emacs-directory) (file-name-as-directory "pages")))
       (html-files (collect-basenames html-dir "\\.html$")))
       (if (not (equal org-files html-files)) ; each org file is an html page
         (let* ((html-file (concat html-dir "site_map.html"))
               (html-ts (file-attribute-modification-time (file-attributes html-file)))
               (org-html-file (concat org-dir "site_map.html"))
               (org-html-ts (file-attribute-modification-time (file-attributes org-html-file))))
               (if (time-less-p org-html-ts html-ts)
                 (progn
                   (message "setting %s timestamp to %s's +1s" org-html-file html-file)
                   (set-file-times org-html-file (time-add html-ts (seconds-to-time 1))))
                 (message "skipping timestamp update for site_map %s as it is already more recent than %s" org-html-file html-file)))))
)
#+END_SRC
